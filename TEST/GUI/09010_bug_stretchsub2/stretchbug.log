OOF.Microstructure.Create_From_ImageFile(filename='examples/cyallow.png', microstructure_name='cyallow.png', height=automatic, width=automatic)
OOF.Image.AutoGroup(image='cyallow.png:cyallow.png', name_template='%c')
OOF.Material.New(name='material', material_type='bulk')
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Material.Assign(material='material', microstructure='cyallow.png', pixels=every)
OOF.Windows.Graphics.New()
OOF.Skeleton.New(name='skeleton', microstructure='cyallow.png', x_elements=4, y_elements=4, skeleton_geometry=QuadSkeleton(left_right_periodicity=False,top_bottom_periodicity=False))
OOF.Mesh.New(name='mesh', skeleton='cyallow.png:skeleton', element_types=['D2_2', 'T3_3', 'Q4_4'])
OOF.Subproblem.New(name='subproblem', mesh='cyallow.png:skeleton:mesh', subproblem=PixelGroupSubProblem(group='#00ffff'))
OOF.Subproblem.Field.Define(subproblem='cyallow.png:skeleton:mesh:subproblem', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='cyallow.png:skeleton:mesh:subproblem', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='cyallow.png:skeleton:mesh:subproblem', equation=Force_Balance)
OOF.Subproblem.Equation.Activate(subproblem='cyallow.png:skeleton:mesh:subproblem', equation=Plane_Stress)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='0.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='0.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='right'))
OOF.Subproblem.Disable_Solution(subproblem='cyallow.png:skeleton:mesh:default')
OOF.Subproblem.Set_Solver(subproblem='cyallow.png:skeleton:mesh:subproblem', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='cyallow.png:skeleton:mesh', endtime=0.0)
OOF.Mesh.Boundary_Conditions.Edit(name='bc<2>', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='10.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='right'))
OOF.Subproblem.New(name='subproblem<2>', mesh='cyallow.png:skeleton:mesh', subproblem=PixelGroupSubProblem(group='#00ffff'))
OOF.Subproblem.Copy_Field_State(source='cyallow.png:skeleton:mesh:subproblem', target='cyallow.png:skeleton:mesh:subproblem<2>')
OOF.Subproblem.Copy_Equation_State(source='cyallow.png:skeleton:mesh:subproblem', target='cyallow.png:skeleton:mesh:subproblem<2>')
OOF.Subproblem.Disable_Solution(subproblem='cyallow.png:skeleton:mesh:subproblem')
OOF.Subproblem.Set_Solver(subproblem='cyallow.png:skeleton:mesh:subproblem<2>', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='cyallow.png:skeleton:mesh', endtime=0.0)
OOF.Subproblem.Enable_Solution(subproblem='cyallow.png:skeleton:mesh:subproblem')
OOF.Subproblem.Disable_Solution(subproblem='cyallow.png:skeleton:mesh:subproblem<2>')
OOF.Mesh.Solve(mesh='cyallow.png:skeleton:mesh', endtime=0.0)
