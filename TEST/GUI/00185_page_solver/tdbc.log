OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, width_in_pixels=10, height_in_pixels=10)
OOF.Material.New(name='material', material_type='bulk')
OOF.Material.Assign(material='material', microstructure='microstructure', pixels=every)
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Material.Add_property(name='material', property='Mechanical:MassDensity:ConstantMassDensity')
OOF.Material.Add_property(name='material', property='Thermal:Conductivity:Isotropic')
OOF.Material.Add_property(name='material', property='Thermal:HeatCapacity:ConstantHeatCapacity')
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=4, y_elements=4, skeleton_geometry=QuadSkeleton(left_right_periodicity=False,top_bottom_periodicity=False))
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['D2_2', 'T3_3', 'Q4_4'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Mesh.Field.In_Plane(mesh='microstructure:skeleton:mesh', field=Temperature)
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Mesh.Field.In_Plane(mesh='microstructure:skeleton:mesh', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Heat_Eqn)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='floattemp', mesh='microstructure:skeleton:mesh', condition=FloatBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='floatdisp', mesh='microstructure:skeleton:mesh', condition=FloatBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='top'))
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floatdisp', initializer=FloatBCInitMin(value=0.0))
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floattemp', initializer=FloatBCInitMin(value=0.0))
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicAdaptiveDriver(tolerance=0.0001,minstep=1.0000000000000001e-05),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floatdisp', initializer=FloatBCInitMin_td(value=0.0,time_derivative=0.10000000000000001))
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floattemp', initializer=FloatBCInitMin(value=0.20000000000000001))
OOF.Mesh.Boundary_Conditions.Clear_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floattemp')
OOF.Mesh.Clear_Field_Initializers(mesh='microstructure:skeleton:mesh')
OOF.Material.Remove_property(name='material', property='Mechanical:MassDensity:ConstantMassDensity')
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='floatdisp', initializer=FloatBCInitMin(value=0.20000000000000001))
