OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, width_in_pixels=10, height_in_pixels=10)
OOF.Material.New(name='material', material_type='bulk')
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Material.Assign(material='material', microstructure='microstructure', pixels=every)
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=10, y_elements=10, skeleton_geometry=QuadSkeleton(left_right_periodicity=False,top_bottom_periodicity=False))
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['D2_2', 'T3_3', 'Q4_4'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Mesh.Set_Field_Initializer(mesh='microstructure:skeleton:mesh', field=Temperature, initializer=FuncScalarFieldInit(function='x*y*y'))
OOF.Mesh.Apply_Field_Initializers(mesh='microstructure:skeleton:mesh')
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='top', analyzer=AverageField(field=Temperature), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='bottom', analyzer=AverageField(field=Temperature), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='left', analyzer=AverageField(field=Temperature), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='right', analyzer=AverageField(field=Temperature), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='top', analyzer=AverageField(field=Displacement), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='right', analyzer=AverageField(field=Displacement), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='left', analyzer=AverageField(field=Displacement), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='bottom', analyzer=AverageField(field=Displacement), destination=MessageWindowStream())
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Mesh.Field.In_Plane(mesh='microstructure:skeleton:mesh', field=Displacement)
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='bottom', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='left', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='right', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='top', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='1.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ContinuumProfileXTd(function='1.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ContinuumProfileXTd(function='1.0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='right'))
OOF.Mesh.Boundary_Conditions.New(name='bc<4>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='0.1',timeDerivative='0.0',timeDerivative2='0.0'),boundary='right'))
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='microstructure:skeleton:mesh', endtime=0.0)
OOF.Windows.Graphics.New()
OOF.Mesh.Boundary_Conditions.Edit(name='bc', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ContinuumProfileXTd(function='0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='left'))
OOF.Mesh.Boundary_Conditions.Edit(name='bc<2>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ContinuumProfileXTd(function='0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='left'))
OOF.Mesh.Boundary_Conditions.Edit(name='bc<3>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ContinuumProfileXTd(function='0',timeDerivative='0.0',timeDerivative2='0.0'),boundary='right'))
OOF.Mesh.Solve(mesh='microstructure:skeleton:mesh', endtime=0.0)
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='top', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='right', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='left', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='bottom', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic(cijkl=IsotropicRank4TensorEnu(young=0.66666666666666663,poisson=0.0))
OOF.Mesh.Solve(mesh='microstructure:skeleton:mesh', endtime=0.0)
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='right', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='left', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='bottom', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Mesh.Boundary_Analysis.Analyze(mesh='microstructure:skeleton:mesh', time=latest, boundary='top', analyzer=IntegrateBdyFlux(flux=Stress), destination=MessageWindowStream())
OOF.Subproblem.Field.Undefine(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Undefine(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Equation.Deactivate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Delete(mesh='microstructure:skeleton:mesh')
