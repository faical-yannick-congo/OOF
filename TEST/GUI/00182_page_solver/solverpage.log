OOF.File.LoadStartUp.Data(filename='TEST_DATA/testmesh.mesh')
OOF.Material.Add_property(name='material', property='Thermal:Conductivity:Isotropic')
OOF.Subproblem.New(name='thermal', mesh='microstructure:skeleton:mesh', subproblem=EntireMeshSubProblem())
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:thermal', field=Temperature)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:thermal', field=Temperature)
OOF.Mesh.Field.In_Plane(mesh='microstructure:skeleton:mesh', field=Temperature)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:thermal', equation=Heat_Eqn)
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:thermal', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Subproblem.Remove_Solver(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Field.Deactivate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Undefine(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Equation.Deactivate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Subproblem.Equation.Deactivate(subproblem='microstructure:skeleton:mesh:default', equation=Plane_Stress)
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Plane_Stress)
OOF.Material.Remove_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Material.Remove(microstructure='microstructure', pixels=every)
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Material.Assign(material='material', microstructure='microstructure', pixels=every)
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicAdaptiveDriver(tolerance=0.0001,minstep=1.0000000000000001e-05),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Material.Remove_property(name='material', property='Mechanical:MassDensity:ConstantMassDensity')
OOF.Subproblem.Disable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Subproblem.Enable_Solution(subproblem='microstructure:skeleton:mesh:default')
OOF.Material.Add_property(name='material', property='Mechanical:MassDensity:ConstantMassDensity')
