# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='microstructure', size=Point(1,1), isize=iPoint(10,10))
Microstructure.Categories(microstructure='microstructure', categories=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
Property.Mechanical.Elasticity.Isotropic(name='', cijkl=IsotropicRank4TensorCij(c11=1.0,c12=0.5))
Property.Mechanical.MassDensity.ConstantMassDensity(name='', rho=1.0)
MaterialandType(name='material', properties=['Mechanical:Elasticity:Isotropic', 'Mechanical:MassDensity:ConstantMassDensity'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='microstructure', category=0, material='material')
Microstructure.EndCategories(microstructure='microstructure')
Skeleton.NewPeriodic(name='skeleton', microstructure='microstructure', left_right_periodicity=False, top_bottom_periodicity=False)
Skeleton.Nodes(skeleton='microstructure:skeleton', points=[(0.0, 0.0), (1.0, 0.0), (0.0, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='microstructure:skeleton', nodes=[(0, 1, 3, 2)])
Skeleton.PinnedNodes(skeleton='microstructure:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='microstructure:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:skeleton', name='bottomright', nodes=[1], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:skeleton', name='topleft', nodes=[2], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:skeleton', name='topright', nodes=[3], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:skeleton', name='bottom', edges=[(0, 1)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:skeleton', name='left', edges=[(2, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:skeleton', name='right', edges=[(1, 3)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:skeleton', name='top', edges=[(3, 2)], exterior=1)
Mesh.New(name='mesh', masterelems=['D2_2', 'T3_3', 'Q4_4'], skeleton='microstructure:skeleton')
Subproblem.Fields(subproblem='microstructure:skeleton:mesh:default', defined=['Displacement'], active=['Displacement'], inplane=['Displacement'])
Subproblem.Time_Derivative_Fields(subproblem='microstructure:skeleton:mesh:default', fields=['Displacement'])
Subproblem.Equations(subproblem='microstructure:skeleton:mesh:default', equations=['Force_Balance'])
Mesh.Initialize_Field(mesh='microstructure:skeleton:mesh', field=Displacement, initializer=FuncTwoVectorFieldInit(fx='0.5*x',fy='0.0'))
Mesh.Boundary_Condition(mesh='microstructure:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='left'))
Mesh.Boundary_Condition(mesh='microstructure:skeleton:mesh', bcname='bc<2>', bc=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='top'))
Mesh.Boundary_Condition(mesh='microstructure:skeleton:mesh', bcname='bc<3>', bc=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='microstructure:skeleton:mesh', bcname='bc<4>', bc=FloatBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='right'))
Mesh.Load_Field(mesh='microstructure:skeleton:mesh', fields=['Displacement', 'Displacement_t', 'Displacement_z'], field_values=[(0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (1, 0.5, 0.0, 0.74481499200565116, 0.0, 0.0, 0.0, 0.0), (2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (3, 0.5, 0.0, 0.74481499200565804, 0.0, 0.0, 0.0, 0.0)])
Mesh.Time(mesh='microstructure:skeleton:mesh', time=0.0)
