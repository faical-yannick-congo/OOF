# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='reference', size=Point(1,1), isize=iPoint(10,10))
Microstructure.PixelGroup(microstructure='reference', group='edges', meshable=1)
Microstructure.PixelGroup(microstructure='reference', group='stripe', meshable=1)
Microstructure.Categories(microstructure='reference', categories=[[0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0]])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=0, groups=['edges'])
Microstructure.DefineCategory.PixelGroups(microstructure='reference', category=1, groups=['stripe'])
Property.Thermal.Conductivity.Isotropic(name='', kappa=1.0)
MaterialandType(name='material', properties=['Thermal:Conductivity:Isotropic'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='reference', category=0, material='material')
Microstructure.DefineCategory.Material(microstructure='reference', category=1, material='material')
Microstructure.EndCategories(microstructure='reference')
Skeleton.NewPeriodic(name='skeleton', microstructure='reference', left_right_periodicity=False, top_bottom_periodicity=False)
Skeleton.Nodes(skeleton='reference:skeleton', points=[(0.0, 0.0), (0.10000000000000001, 0.0), (0.20000000000000001, 0.0), (0.30000000000000004, 0.0), (0.40000000000000002, 0.0), (0.5, 0.0), (0.60000000000000009, 0.0), (0.70000000000000007, 0.0), (0.80000000000000004, 0.0), (0.90000000000000002, 0.0), (1.0, 0.0), (0.0, 0.10000000000000001), (0.10000000000000001, 0.10000000000000001), (0.20000000000000001, 0.10000000000000001), (0.30000000000000004, 0.10000000000000001), (0.40000000000000002, 0.10000000000000001), (0.5, 0.10000000000000001), (0.60000000000000009, 0.10000000000000001), (0.70000000000000007, 0.10000000000000001), (0.80000000000000004, 0.10000000000000001), (0.90000000000000002, 0.10000000000000001), (1.0, 0.10000000000000001), (0.0, 0.20000000000000001), (0.10000000000000001, 0.20000000000000001), (0.20000000000000001, 0.20000000000000001), (0.30000000000000004, 0.20000000000000001), (0.40000000000000002, 0.20000000000000001), (0.5, 0.20000000000000001), (0.60000000000000009, 0.20000000000000001), (0.70000000000000007, 0.20000000000000001), (0.80000000000000004, 0.20000000000000001), (0.90000000000000002, 0.20000000000000001), (1.0, 0.20000000000000001), (0.0, 0.30000000000000004), (0.10000000000000001, 0.30000000000000004), (0.20000000000000001, 0.30000000000000004), (0.30000000000000004, 0.30000000000000004), (0.40000000000000002, 0.30000000000000004), (0.5, 0.30000000000000004), (0.60000000000000009, 0.30000000000000004), (0.70000000000000007, 0.30000000000000004), (0.80000000000000004, 0.30000000000000004), (0.90000000000000002, 0.30000000000000004), (1.0, 0.30000000000000004), (0.0, 0.40000000000000002), (0.10000000000000001, 0.40000000000000002), (0.20000000000000001, 0.40000000000000002), (0.30000000000000004, 0.40000000000000002), (0.40000000000000002, 0.40000000000000002), (0.5, 0.40000000000000002), (0.60000000000000009, 0.40000000000000002), (0.70000000000000007, 0.40000000000000002), (0.80000000000000004, 0.40000000000000002), (0.90000000000000002, 0.40000000000000002), (1.0, 0.40000000000000002), (0.0, 0.5), (0.10000000000000001, 0.5), (0.20000000000000001, 0.5), (0.30000000000000004, 0.5), (0.40000000000000002, 0.5), (0.5, 0.5), (0.60000000000000009, 0.5), (0.70000000000000007, 0.5), (0.80000000000000004, 0.5), (0.90000000000000002, 0.5), (1.0, 0.5), (0.0, 0.60000000000000009), (0.10000000000000001, 0.60000000000000009), (0.20000000000000001, 0.60000000000000009), (0.30000000000000004, 0.60000000000000009), (0.40000000000000002, 0.60000000000000009), (0.5, 0.60000000000000009), (0.60000000000000009, 0.60000000000000009), (0.70000000000000007, 0.60000000000000009), (0.80000000000000004, 0.60000000000000009), (0.90000000000000002, 0.60000000000000009), (1.0, 0.60000000000000009), (0.0, 0.70000000000000007), (0.10000000000000001, 0.70000000000000007), (0.20000000000000001, 0.70000000000000007), (0.30000000000000004, 0.70000000000000007), (0.40000000000000002, 0.70000000000000007), (0.5, 0.70000000000000007), (0.60000000000000009, 0.70000000000000007), (0.70000000000000007, 0.70000000000000007), (0.80000000000000004, 0.70000000000000007), (0.90000000000000002, 0.70000000000000007), (1.0, 0.70000000000000007), (0.0, 0.80000000000000004), (0.10000000000000001, 0.80000000000000004), (0.20000000000000001, 0.80000000000000004), (0.30000000000000004, 0.80000000000000004), (0.40000000000000002, 0.80000000000000004), (0.5, 0.80000000000000004), (0.60000000000000009, 0.80000000000000004), (0.70000000000000007, 0.80000000000000004), (0.80000000000000004, 0.80000000000000004), (0.90000000000000002, 0.80000000000000004), (1.0, 0.80000000000000004), (0.0, 0.90000000000000002), (0.10000000000000001, 0.90000000000000002), (0.20000000000000001, 0.90000000000000002), (0.30000000000000004, 0.90000000000000002), (0.40000000000000002, 0.90000000000000002), (0.5, 0.90000000000000002), (0.60000000000000009, 0.90000000000000002), (0.70000000000000007, 0.90000000000000002), (0.80000000000000004, 0.90000000000000002), (0.90000000000000002, 0.90000000000000002), (1.0, 0.90000000000000002), (0.0, 1.0), (0.10000000000000001, 1.0), (0.20000000000000001, 1.0), (0.30000000000000004, 1.0), (0.40000000000000002, 1.0), (0.5, 1.0), (0.60000000000000009, 1.0), (0.70000000000000007, 1.0), (0.80000000000000004, 1.0), (0.90000000000000002, 1.0), (1.0, 1.0)])
Skeleton.Elements(skeleton='reference:skeleton', nodes=[(0, 1, 12, 11), (1, 2, 13, 12), (2, 3, 14, 13), (3, 4, 15, 14), (4, 5, 16, 15), (5, 6, 17, 16), (6, 7, 18, 17), (7, 8, 19, 18), (8, 9, 20, 19), (9, 10, 21, 20), (11, 12, 23, 22), (12, 13, 24, 23), (13, 14, 25, 24), (14, 15, 26, 25), (15, 16, 27, 26), (16, 17, 28, 27), (17, 18, 29, 28), (18, 19, 30, 29), (19, 20, 31, 30), (20, 21, 32, 31), (22, 23, 34, 33), (23, 24, 35, 34), (24, 25, 36, 35), (25, 26, 37, 36), (26, 27, 38, 37), (27, 28, 39, 38), (28, 29, 40, 39), (29, 30, 41, 40), (30, 31, 42, 41), (31, 32, 43, 42), (33, 34, 45, 44), (34, 35, 46, 45), (35, 36, 47, 46), (36, 37, 48, 47), (37, 38, 49, 48), (38, 39, 50, 49), (39, 40, 51, 50), (40, 41, 52, 51), (41, 42, 53, 52), (42, 43, 54, 53), (44, 45, 56, 55), (45, 46, 57, 56), (46, 47, 58, 57), (47, 48, 59, 58), (48, 49, 60, 59), (49, 50, 61, 60), (50, 51, 62, 61), (51, 52, 63, 62), (52, 53, 64, 63), (53, 54, 65, 64), (55, 56, 67, 66), (56, 57, 68, 67), (57, 58, 69, 68), (58, 59, 70, 69), (59, 60, 71, 70), (60, 61, 72, 71), (61, 62, 73, 72), (62, 63, 74, 73), (63, 64, 75, 74), (64, 65, 76, 75), (66, 67, 78, 77), (67, 68, 79, 78), (68, 69, 80, 79), (69, 70, 81, 80), (70, 71, 82, 81), (71, 72, 83, 82), (72, 73, 84, 83), (73, 74, 85, 84), (74, 75, 86, 85), (75, 76, 87, 86), (77, 78, 89, 88), (78, 79, 90, 89), (79, 80, 91, 90), (80, 81, 92, 91), (81, 82, 93, 92), (82, 83, 94, 93), (83, 84, 95, 94), (84, 85, 96, 95), (85, 86, 97, 96), (86, 87, 98, 97), (88, 89, 100, 99), (89, 90, 101, 100), (90, 91, 102, 101), (91, 92, 103, 102), (92, 93, 104, 103), (93, 94, 105, 104), (94, 95, 106, 105), (95, 96, 107, 106), (96, 97, 108, 107), (97, 98, 109, 108), (99, 100, 111, 110), (100, 101, 112, 111), (101, 102, 113, 112), (102, 103, 114, 113), (103, 104, 115, 114), (104, 105, 116, 115), (105, 106, 117, 116), (106, 107, 118, 117), (107, 108, 119, 118), (108, 109, 120, 119)])
Skeleton.PinnedNodes(skeleton='reference:skeleton', nodes=[])
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomleft', nodes=[0], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='bottomright', nodes=[10], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='midtop', nodes=[114], exterior=0)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topleft', nodes=[110], exterior=1)
Skeleton.PointBoundary(skeleton='reference:skeleton', name='topright', nodes=[120], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='bottom', edges=[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='left', edges=[(110, 99), (99, 88), (88, 77), (77, 66), (66, 55), (55, 44), (44, 33), (33, 22), (22, 11), (11, 0)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='right', edges=[(10, 21), (21, 32), (32, 43), (43, 54), (54, 65), (65, 76), (76, 87), (87, 98), (98, 109), (109, 120)], exterior=1)
Skeleton.EdgeBoundary(skeleton='reference:skeleton', name='top', edges=[(120, 119), (119, 118), (118, 117), (117, 116), (116, 115), (115, 114), (114, 113), (113, 112), (112, 111), (111, 110)], exterior=1)
Mesh.New(name='mesh', masterelems=['T6_6', 'Q8_8'], skeleton='reference:skeleton')
Subproblem.New(name='stripe', subproblem=PixelGroupSubProblem(group='stripe'), mesh='reference:skeleton:mesh')
Subproblem.Fields(subproblem='reference:skeleton:mesh:stripe', defined=['Temperature'], active=['Temperature'], inplane=['Temperature'])
Subproblem.Equations(subproblem='reference:skeleton:mesh:stripe', equations=['Heat_Eqn'])
Subproblem.Solver(subproblem='reference:skeleton:mesh:stripe', solver_mode=AdvancedSolverMode(time_stepper=StaticDriver(),nonlinear_solver=NoNonlinearSolver(),symmetric_solver=ConjugateGradient(preconditioner=ILUPreconditioner(),tolerance=1e-13,max_iterations=1000),asymmetric_solver=GeneralizedMinResidual(preconditioner=ILUPreconditioner(),tolerance=1e-13,max_iterations=1000,krylov_dimension=100)))
Subproblem.New(name='edges', subproblem=PixelGroupSubProblem(group='edges'), mesh='reference:skeleton:mesh')
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc', bc=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
Mesh.Boundary_Condition(mesh='reference:skeleton:mesh', bcname='bc<2>', bc=ForceBC(equation=Heat_Eqn,eqn_component='',profile=ContinuumProfileXT(function='1'),boundary='midtop'))
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(0,), (1,), (9,), (10,), (11,), (12,), (20,), (21,), (22,), (23,), (31,), (32,), (33,), (34,), (42,), (43,), (44,), (45,), (53,), (54,), (55,), (56,), (64,), (65,), (66,), (67,), (75,), (76,), (77,), (78,), (86,), (87,), (88,), (89,), (97,), (98,), (99,), (100,), (108,), (109,), (110,), (111,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (127,), (146,), (147,), (148,), (149,), (150,), (151,), (152,), (153,), (154,), (156,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (177,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (198,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (219,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (240,), (253,), (254,), (255,), (256,), (257,), (258,), (259,), (261,), (274,), (275,), (276,), (277,), (278,), (279,), (280,), (282,), (295,), (296,), (297,), (298,), (299,), (300,), (301,), (303,), (316,), (317,), (318,), (319,), (320,), (321,), (322,), (324,), (337,), (338,), (339,), (340,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(2, 0.0, 0.0), (3, 0.0, 0.0), (4, 0.0, 0.0), (5, 0.0, 0.0), (6, 0.0, 0.0), (7, 0.0, 0.0), (8, 0.0, 0.0), (13, -0.1685130808318413, 0.0), (14, -0.16827000537711165, 0.0), (15, -0.16760148571904179, 0.0), (16, -0.16667803910628601, 0.0), (17, -0.16574315711329329, 0.0), (18, -0.16505176955865689, 0.0), (19, -0.16479726159089789, 0.0), (24, -0.33753345020295028, 0.0), (25, -0.33698508185506987, 0.0), (26, -0.33547178184535409, 0.0), (27, -0.33337046679046906, 0.0), (28, -0.33123233341856695, 0.0), (29, -0.32964531913780581, 0.0), (30, -0.32906005490198875, 0.0), (35, -0.50769418026683655, 0.0), (36, -0.50670451352771462, 0.0), (37, -0.50395656217616491, 0.0), (38, -0.5001039575393853, 0.0), (39, -0.49614608812216743, 0.0), (40, -0.4931876648276563, 0.0), (41, -0.49209279224452696, 0.0), (46, -0.67991068903452623, 0.0), (47, -0.67826912461310296, 0.0), (48, -0.67363145252594858, 0.0), (49, -0.66697788218216714, 0.0), (50, -0.66002024132086468, 0.0), (51, -0.65477014978164239, 0.0), (52, -0.65282026272988425, 0.0), (57, -0.85549003578467075, 0.0), (58, -0.85289018132481764, 0.0), (59, -0.84535217036061527, 0.0), (60, -0.83415247371632562, 0.0), (61, -0.82210919867087118, 0.0), (62, -0.81288098282911414, 0.0), (63, -0.80943502665868083, 0.0), (68, -1.0362813041326013, 0.0), (69, -1.0328697766000758, 0.0), (70, -1.0215748424323203, 0.0), (71, -1.0026130523477776, 0.0), (72, -0.98123397560756997, 0.0), (73, -0.9648531350248436, 0.0), (74, -0.95878345674474375, 0.0), (79, -1.2236901128818363, 0.0), (80, -1.219783786935708, 0.0), (81, -1.2039521607329187, 0.0), (82, -1.1726750969710367, 0.0), (83, -1.1350972891554343, 0.0), (84, -1.1059850874446482, 0.0), (85, -1.0953077855129423, 0.0), (90, -1.4135336281222726, 0.0), (91, -1.423450240895028, 0.0), (92, -1.4182996028919603, 0.0), (93, -1.3547348446725023, 0.0), (94, -1.2777337930542443, 0.0), (95, -1.2274524754294758, 0.0), (96, -1.209841342341619, 0.0), (101, -1.5943807610430218, 0.0), (102, -1.6125600414700614, 0.0), (103, -1.6502371500078756, 0.0), (104, -1.5233454383000375, 0.0), (105, -1.3991749742740054, 0.0), (106, -1.3136476486582076, 0.0), (107, -1.2890251990268382, 0.0), (112, -1.6849877324084204, 0.0), (113, -1.7348519522028398, 0.0), (114, -2.5896353712769615, 0.0), (115, -1.6367419484813179, 0.0), (116, -1.4552826431201769, 0.0), (117, -1.3455895696950464, 0.0), (118, -1.3178555747334031, 0.0), (126, -0.084225643742024986, 0.0), (128, 0.0, 0.0), (129, -0.084107947830069529, 0.0), (130, -0.16845009775606062, 0.0), (131, 0.0, 0.0), (132, -0.083784498753098305, 0.0), (133, -0.16797961849273621, 0.0), (134, 0.0, 0.0), (135, -0.083338253775094268, 0.0), (136, -0.16715714088552031, 0.0), (137, 0.0, 0.0), (138, -0.082887057108739462, 0.0), (139, -0.16619587192933211, 0.0), (140, 0.0, 0.0), (141, -0.082553705416144665, 0.0), (142, -0.16535377977984406, 0.0), (143, 0.0, 0.0), (144, -0.082431058577441624, 0.0), (145, -0.164863677113611, 0.0), (155, -0.25292271480347323, 0.0), (157, -0.25253914469163813, 0.0), (158, -0.33739089272101369, 0.0), (159, -0.25148289314040218, 0.0), (160, -0.33632734748350024, 0.0), (161, -0.25002102209130295, 0.0), (162, -0.33446070321934568, 0.0), (163, -0.24853824920850995, 0.0), (164, -0.33226822273474355, 0.0), (165, -0.24744017413567071, 0.0), (166, -0.33033902426955514, 0.0), (167, -0.24703568234696693, 0.0), (168, -0.32921294177196753, 0.0), (176, -0.42241860792253155, 0.0), (178, -0.42167173732768498, 0.0), (179, -0.50744031639413767, 0.0), (180, -0.419606148794196, 0.0), (181, -0.50551842361128108, 0.0), (182, -0.41672769778421093, 0.0), (183, -0.50211293123117706, 0.0), (184, -0.41378771803238862, 0.0), (185, -0.49807009368994798, 0.0), (186, -0.41159906684516151, 0.0), (187, -0.49448302474544198, 0.0), (188, -0.41079066255869229, 0.0), (189, -0.49237907410361487, 0.0), (197, -0.59346937359258189, 0.0), (199, -0.59218493673503714, 0.0), (200, -0.6794828249068714, 0.0), (201, -0.58859429600822077, 0.0), (202, -0.67625444190703909, 0.0), (203, -0.58351353258250971, 0.0), (204, -0.67043774551668756, 0.0), (205, -0.57825515883997081, 0.0), (206, -0.66340334831671366, 0.0), (207, -0.57430817927249733, 0.0), (208, -0.65707307419229011, 0.0), (209, -0.57284501828564627, 0.0), (210, -0.65333140200740103, 0.0), (218, -0.76716600601122897, 0.0), (220, -0.76507663935717762, 0.0), (221, -0.85485928236138775, 0.0), (222, -0.7591269721353735, 0.0), (223, -0.84976267773744274, 0.0), (224, -0.75048836762315951, 0.0), (225, -0.84013947302862435, 0.0), (226, -0.74135217268163101, 0.0), (227, -0.82803829408935281, 0.0), (228, -0.73440543720944318, 0.0), (229, -0.81693822537548422, 0.0), (230, -0.73181668040455161, 0.0), (231, -0.81033827834595595, 0.0), (239, -0.94514337761906431, 0.0), (241, -0.94206920855181242, 0.0), (242, -1.0353931691981606, 0.0), (243, -0.93272559863092086, 0.0), (244, -1.0278228435477919, 0.0), (245, -0.9181658266477396, 0.0), (246, -1.0123541013563528, 0.0), (247, -0.90217260691005097, 0.0), (248, -0.99164896853390139, 0.0), (249, -0.88989570269160156, 0.0), (250, -0.97207099410779763, 0.0), (251, -0.88532343609136632, 0.0), (252, -0.9603713420303146, 0.0), (260, -1.1291217302037702, 0.0), (262, -1.1250821531040665, 0.0), (263, -1.2231435595337607, 0.0), (264, -1.1112369898046459, 0.0), (265, -1.2156905244875422, 0.0), (266, -1.0870655813032715, 0.0), (267, -1.1918158315067986, 0.0), (268, -1.0590394039991775, 0.0), (269, -1.1541165783768146, 0.0), (270, -1.0372609256820144, 0.0), (271, -1.1186460401669172, 0.0), (272, -1.0291776948982718, 0.0), (273, -1.0980912807095358, 0.0), (281, -1.319731020025839, 0.0), (283, -1.319977185910739, 0.0), (284, -1.417376333784691, 0.0), (285, -1.3060189797558659, 0.0), (286, -1.4162586363844361, 0.0), (287, -1.2624911901473426, 0.0), (288, -1.3819482730563493, 0.0), (289, -1.2087981193172279, 0.0), (290, -1.3142365678204522, 0.0), (291, -1.1699453016926209, 0.0), (292, -1.2492419579771008, 0.0), (293, -1.1561582389388605, 0.0), (294, -1.2142590098893133, 0.0), (302, -1.5078143887169699, 0.0), (304, -1.5192732791842445, 0.0), (305, -1.594485630070535, 0.0), (306, -1.5180790545450231, 0.0), (307, -1.6904316175528047, 0.0), (308, -1.4391866815650296, 0.0), (309, -1.6465675923883649, 0.0), (310, -1.3426933291854641, 0.0), (311, -1.4545213875755245, 0.0), (312, -1.2765749230661636, 0.0), (313, -1.3489334346956317, 0.0), (314, -1.2545977511114528, 0.0), (315, -1.2947262213444914, 0.0), (323, -1.6385284121378554, 0.0), (325, -1.7450097031151994, 0.0), (326, -1.6805955452623946, 0.0), (327, -1.9670348767851025, 0.0), (328, -2.0000332739605797, 0.0), (329, -1.6474776690238178, 0.0), (330, -1.9521469123454258, 0.0), (331, -1.4292591641201102, 0.0), (332, -1.5226013190120178, 0.0), (333, -1.3392987977438309, 0.0), (334, -1.3888870889084062, 0.0), (335, -1.3095025373783891, 0.0), (336, -1.3239742913374701, 0.0)])
Mesh.Cache_Fields(mesh='reference:skeleton:mesh', time=0.0)
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=[], field_values=[(0,), (1,), (9,), (10,), (11,), (12,), (20,), (21,), (22,), (23,), (31,), (32,), (33,), (34,), (42,), (43,), (44,), (45,), (53,), (54,), (55,), (56,), (64,), (65,), (66,), (67,), (75,), (76,), (77,), (78,), (86,), (87,), (88,), (89,), (97,), (98,), (99,), (100,), (108,), (109,), (110,), (111,), (119,), (120,), (121,), (122,), (123,), (124,), (125,), (127,), (146,), (147,), (148,), (149,), (150,), (151,), (152,), (153,), (154,), (156,), (169,), (170,), (171,), (172,), (173,), (174,), (175,), (177,), (190,), (191,), (192,), (193,), (194,), (195,), (196,), (198,), (211,), (212,), (213,), (214,), (215,), (216,), (217,), (219,), (232,), (233,), (234,), (235,), (236,), (237,), (238,), (240,), (253,), (254,), (255,), (256,), (257,), (258,), (259,), (261,), (274,), (275,), (276,), (277,), (278,), (279,), (280,), (282,), (295,), (296,), (297,), (298,), (299,), (300,), (301,), (303,), (316,), (317,), (318,), (319,), (320,), (321,), (322,), (324,), (337,), (338,), (339,), (340,)])
Mesh.Load_Field(mesh='reference:skeleton:mesh', fields=['Temperature', 'Temperature_z'], field_values=[(2, 0.0, 0.0), (3, 0.0, 0.0), (4, 0.0, 0.0), (5, 0.0, 0.0), (6, 0.0, 0.0), (7, 0.0, 0.0), (8, 0.0, 0.0), (13, -0.1685130808318413, 0.0), (14, -0.16827000537711165, 0.0), (15, -0.16760148571904179, 0.0), (16, -0.16667803910628601, 0.0), (17, -0.16574315711329329, 0.0), (18, -0.16505176955865689, 0.0), (19, -0.16479726159089789, 0.0), (24, -0.33753345020295028, 0.0), (25, -0.33698508185506987, 0.0), (26, -0.33547178184535409, 0.0), (27, -0.33337046679046906, 0.0), (28, -0.33123233341856695, 0.0), (29, -0.32964531913780581, 0.0), (30, -0.32906005490198875, 0.0), (35, -0.50769418026683655, 0.0), (36, -0.50670451352771462, 0.0), (37, -0.50395656217616491, 0.0), (38, -0.5001039575393853, 0.0), (39, -0.49614608812216743, 0.0), (40, -0.4931876648276563, 0.0), (41, -0.49209279224452696, 0.0), (46, -0.67991068903452623, 0.0), (47, -0.67826912461310296, 0.0), (48, -0.67363145252594858, 0.0), (49, -0.66697788218216714, 0.0), (50, -0.66002024132086468, 0.0), (51, -0.65477014978164239, 0.0), (52, -0.65282026272988425, 0.0), (57, -0.85549003578467075, 0.0), (58, -0.85289018132481764, 0.0), (59, -0.84535217036061527, 0.0), (60, -0.83415247371632562, 0.0), (61, -0.82210919867087118, 0.0), (62, -0.81288098282911414, 0.0), (63, -0.80943502665868083, 0.0), (68, -1.0362813041326013, 0.0), (69, -1.0328697766000758, 0.0), (70, -1.0215748424323203, 0.0), (71, -1.0026130523477776, 0.0), (72, -0.98123397560756997, 0.0), (73, -0.9648531350248436, 0.0), (74, -0.95878345674474375, 0.0), (79, -1.2236901128818363, 0.0), (80, -1.219783786935708, 0.0), (81, -1.2039521607329187, 0.0), (82, -1.1726750969710367, 0.0), (83, -1.1350972891554343, 0.0), (84, -1.1059850874446482, 0.0), (85, -1.0953077855129423, 0.0), (90, -1.4135336281222726, 0.0), (91, -1.423450240895028, 0.0), (92, -1.4182996028919603, 0.0), (93, -1.3547348446725023, 0.0), (94, -1.2777337930542443, 0.0), (95, -1.2274524754294758, 0.0), (96, -1.209841342341619, 0.0), (101, -1.5943807610430218, 0.0), (102, -1.6125600414700614, 0.0), (103, -1.6502371500078756, 0.0), (104, -1.5233454383000375, 0.0), (105, -1.3991749742740054, 0.0), (106, -1.3136476486582076, 0.0), (107, -1.2890251990268382, 0.0), (112, -1.6849877324084204, 0.0), (113, -1.7348519522028398, 0.0), (114, -2.5896353712769615, 0.0), (115, -1.6367419484813179, 0.0), (116, -1.4552826431201769, 0.0), (117, -1.3455895696950464, 0.0), (118, -1.3178555747334031, 0.0), (126, -0.084225643742024986, 0.0), (128, 0.0, 0.0), (129, -0.084107947830069529, 0.0), (130, -0.16845009775606062, 0.0), (131, 0.0, 0.0), (132, -0.083784498753098305, 0.0), (133, -0.16797961849273621, 0.0), (134, 0.0, 0.0), (135, -0.083338253775094268, 0.0), (136, -0.16715714088552031, 0.0), (137, 0.0, 0.0), (138, -0.082887057108739462, 0.0), (139, -0.16619587192933211, 0.0), (140, 0.0, 0.0), (141, -0.082553705416144665, 0.0), (142, -0.16535377977984406, 0.0), (143, 0.0, 0.0), (144, -0.082431058577441624, 0.0), (145, -0.164863677113611, 0.0), (155, -0.25292271480347323, 0.0), (157, -0.25253914469163813, 0.0), (158, -0.33739089272101369, 0.0), (159, -0.25148289314040218, 0.0), (160, -0.33632734748350024, 0.0), (161, -0.25002102209130295, 0.0), (162, -0.33446070321934568, 0.0), (163, -0.24853824920850995, 0.0), (164, -0.33226822273474355, 0.0), (165, -0.24744017413567071, 0.0), (166, -0.33033902426955514, 0.0), (167, -0.24703568234696693, 0.0), (168, -0.32921294177196753, 0.0), (176, -0.42241860792253155, 0.0), (178, -0.42167173732768498, 0.0), (179, -0.50744031639413767, 0.0), (180, -0.419606148794196, 0.0), (181, -0.50551842361128108, 0.0), (182, -0.41672769778421093, 0.0), (183, -0.50211293123117706, 0.0), (184, -0.41378771803238862, 0.0), (185, -0.49807009368994798, 0.0), (186, -0.41159906684516151, 0.0), (187, -0.49448302474544198, 0.0), (188, -0.41079066255869229, 0.0), (189, -0.49237907410361487, 0.0), (197, -0.59346937359258189, 0.0), (199, -0.59218493673503714, 0.0), (200, -0.6794828249068714, 0.0), (201, -0.58859429600822077, 0.0), (202, -0.67625444190703909, 0.0), (203, -0.58351353258250971, 0.0), (204, -0.67043774551668756, 0.0), (205, -0.57825515883997081, 0.0), (206, -0.66340334831671366, 0.0), (207, -0.57430817927249733, 0.0), (208, -0.65707307419229011, 0.0), (209, -0.57284501828564627, 0.0), (210, -0.65333140200740103, 0.0), (218, -0.76716600601122897, 0.0), (220, -0.76507663935717762, 0.0), (221, -0.85485928236138775, 0.0), (222, -0.7591269721353735, 0.0), (223, -0.84976267773744274, 0.0), (224, -0.75048836762315951, 0.0), (225, -0.84013947302862435, 0.0), (226, -0.74135217268163101, 0.0), (227, -0.82803829408935281, 0.0), (228, -0.73440543720944318, 0.0), (229, -0.81693822537548422, 0.0), (230, -0.73181668040455161, 0.0), (231, -0.81033827834595595, 0.0), (239, -0.94514337761906431, 0.0), (241, -0.94206920855181242, 0.0), (242, -1.0353931691981606, 0.0), (243, -0.93272559863092086, 0.0), (244, -1.0278228435477919, 0.0), (245, -0.9181658266477396, 0.0), (246, -1.0123541013563528, 0.0), (247, -0.90217260691005097, 0.0), (248, -0.99164896853390139, 0.0), (249, -0.88989570269160156, 0.0), (250, -0.97207099410779763, 0.0), (251, -0.88532343609136632, 0.0), (252, -0.9603713420303146, 0.0), (260, -1.1291217302037702, 0.0), (262, -1.1250821531040665, 0.0), (263, -1.2231435595337607, 0.0), (264, -1.1112369898046459, 0.0), (265, -1.2156905244875422, 0.0), (266, -1.0870655813032715, 0.0), (267, -1.1918158315067986, 0.0), (268, -1.0590394039991775, 0.0), (269, -1.1541165783768146, 0.0), (270, -1.0372609256820144, 0.0), (271, -1.1186460401669172, 0.0), (272, -1.0291776948982718, 0.0), (273, -1.0980912807095358, 0.0), (281, -1.319731020025839, 0.0), (283, -1.319977185910739, 0.0), (284, -1.417376333784691, 0.0), (285, -1.3060189797558659, 0.0), (286, -1.4162586363844361, 0.0), (287, -1.2624911901473426, 0.0), (288, -1.3819482730563493, 0.0), (289, -1.2087981193172279, 0.0), (290, -1.3142365678204522, 0.0), (291, -1.1699453016926209, 0.0), (292, -1.2492419579771008, 0.0), (293, -1.1561582389388605, 0.0), (294, -1.2142590098893133, 0.0), (302, -1.5078143887169699, 0.0), (304, -1.5192732791842445, 0.0), (305, -1.594485630070535, 0.0), (306, -1.5180790545450231, 0.0), (307, -1.6904316175528047, 0.0), (308, -1.4391866815650296, 0.0), (309, -1.6465675923883649, 0.0), (310, -1.3426933291854641, 0.0), (311, -1.4545213875755245, 0.0), (312, -1.2765749230661636, 0.0), (313, -1.3489334346956317, 0.0), (314, -1.2545977511114528, 0.0), (315, -1.2947262213444914, 0.0), (323, -1.6385284121378554, 0.0), (325, -1.7450097031151994, 0.0), (326, -1.6805955452623946, 0.0), (327, -1.9670348767851025, 0.0), (328, -2.0000332739605797, 0.0), (329, -1.6474776690238178, 0.0), (330, -1.9521469123454258, 0.0), (331, -1.4292591641201102, 0.0), (332, -1.5226013190120178, 0.0), (333, -1.3392987977438309, 0.0), (334, -1.3888870889084062, 0.0), (335, -1.3095025373783891, 0.0), (336, -1.3239742913374701, 0.0)])
Mesh.Time(mesh='reference:skeleton:mesh', time=0.0)
Mesh.Status(mesh='reference:skeleton:mesh', status=Solved(details=''))
